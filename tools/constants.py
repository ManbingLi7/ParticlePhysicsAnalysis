import numpy as np

MASS_NUCLEON_GEV = 0.9314941 # Atomic mass unit
#MASS_NUCLEON_GEV = 0.938 #in GeV 
DEFAULT_RIGIDITY = -1e4
DETECTOR_LABEL = {"Tof": "Tof", "NaF": "NaF", "Agl": "Aerogel"}
NUCLEI_CHARGE = {"He": 2.0,  "Li": 3.0, "Be": 4.0, "B": 5.0, "C": 6.0, "N": 7.0, "O":8.0}
ISOTOPES = {"Li": ["Li6", "Li7"], "Be": ["Be7", "Be9", "Be10"], "B": ["B10", "B11"], "C": ["C12"], "N": ["N14", "N15"], "O":["O16"]}
ISOTOPES_CHARGE = {"Li6": 3.0, "Li7": 3.0,
                   "Be7":4, "Be9":4,  "Be10":4,
                   "B10": 5, "B11":5,  "C12": 6,
                   "N14": 7,  "N15":7,  "O16": 8}
ISOTOPES_MASS = {"Li6": 5.60305, "Li7": 6.53536, 
                 "Be7": 6.5341842572, "Be9": 8.39275054924, "Be10":9.3255036417,
                 'B10': 9.32699, 'B11':10.25510,
                 'C12': 11.17793,
                 'N14':13.115,
                 'N15': 13.954,
                 'O16': 14.931}
#ISOTOPES_MASS = {"Be7": 6.53622, "Be9": 8.39479, "Be10":9.32699, 'B10': 9.32699, 'B11':10.25510, 'C12': 11.17793}
ISOTOPES_COLOR = {"Li6": "tab:blue", "Li7":"tab:orange", "Be7": "tab:blue", "Be9": "tab:orange", "Be10": "tab:green", "B10":"tab:blue", "B11":"tab:orange", 'O16': 'tab:blue'}
NUCLEI_NUMBER =  {"Li6": 6, "Li7": 7, "Be7":7, "Be9":9, "Be10":10, "B10": 10, "B11": 11, "C12":12, "C13": 13, 'O16': 16}
NUCLEI_COLOR = {'Be': 'red', 'Li':'tab:blue', 'B':'tab:orange', 'C': 'tab:green', 'O': 'magenta'}
NUCLEIS= {"Li6": "Li",  "Li7": "Li", "Be7":"Be", "Be9": "Be", "Be10": "Be", "B10": "B", "B11": "B"}  
TOF_ANALYSIS_RANGE_EKIN = [0.4, 1.1]
NAF_ANALYSIS_RANGE_EKIN = [1.0, 4.0]
AGL_ANALYSIS_RANGE_EKIN = [3.8, 12]

DETECTORS = ["Tof", "NaF", "Agl"]

#ANALYSIS_RANGE_EKIN = {"Tof": TOF_ANALYSIS_RANGE_EKIN, "NaF": NAF_ANALYSIS_RANGE_EKIN, "Agl": AGL_ANALYSIS_RANGE_EKIN}

ANALYSIS_RANGE_EKIN_OVERLAP = {"Tof": [0.4, 1.1], "NaF": [1.1, 4.0], "Agl": [4.0, 12.0]}
ANALYSIS_RANGE_EKIN = {"Tof": [0.4, 1.1], "NaF": [1.2, 4.0], "Agl": [4.2, 12.0]}

RANGE_EKIN_EXTEND = {"Tof": [0.4, 1.2], "NaF": [1.0, 4.2], "Agl": [3.8, 13]}


###################################################################
#Beta Correction with High R events for Be
RICH_MEAN_SHIFT_Be= {'NaF': -0.0003, 'Agl':-0.00002}
RICH_SIGMA_SCALE_Be = {'NaF': 0.0094/0.0086, 'Agl': 0.00045/0.0005} 

RICH_MEAN_SHIFT = {'NaF': {'Be': 0.00003, 'O': 0.00004, 'C': 0.00003},
                   'Agl':{'Be': -0.00002, 'O': -0.00004, 'C': -0.00006}}

RICH_SIGMA_SCALE = {'NaF': {'Be': 0.0014/0.0013, 'O': 0.00094/0.00086, 'C':0.00109/0.00099},
                    'Agl': {'Be': 0.00045/0.0005, 'O': 0.00035/0.00042, 'C': 0.00037/0.00044}}


####################################################################


ANALYSIS_RANGE_RIG = {"Li": {"Tof": [1.92, 5.5], "NaF": [4.15, 13.7], "Agl": [9.7, 30.4]},
                         "Be": {"Tof": [1.92, 4.54], "NaF": [3.5, 14.0], "Agl": [8.8, 33.0]}, #Min for Be7, Max for Be10
                         "B": {"Tof": [1.92, 5.0], "NaF": [2.926, 15.5], "Agl": [8.3, 37.0]}}


######################################################################
#scaling factor Be7 to Be9 and Be10
expofunc_rig_sigmafactor_7to9 =  [ 1.18459342, 127.19756028, 67.10310689]
expofunc_rig_sigmafactor_7to10 =  [ 2.73491775, 181.3605604, 392.48417433]
######################################################################

DETECTOR_COLOR = {"Tof": "tab:blue", "NaF": "tab:orange", "Agl": "tab:green"}
ISO_LABELS = {"C12": "$\mathrm{^{12}C}$", "He4": "$\mathrm{^{4}He}$",
              "Be7": "$\mathrm{^{7}Be}$", "Be9": "$\mathrm{^{9}Be}$", "Be10": "$\mathrm{^{10}Be}$",
              "Li6": "$\mathrm{^{6}Li}$",  "Li7": "$\mathrm{^{7}Li}$",
              'B10': "$\mathrm{^{10}B}$", 'B11': "$\mathrm{^{11}B}$", 'O16': "$\mathrm{^{16}O}$"}
#constants for naf/agl selections, change here for all if needed to change 
NAF_FractionPE_LIM = 0.45
AGL_FractionPE_LIM = 0.4
NAF_NPMT_LIM = 10
AGL_NPMT_LIM = 2
NAF_BETACONSIS_LIM = 0.01
#AGL_BETACONSIS_LIM = 0.01
TOFNAF_CONSIS_LIM = 0.06
TOFAGL_CONSIS_LIM = 0.06
RICHAGL_INNER_LIM = 19.0
RICHAGL_RADIUS_UPPLIM = 58.5


NAF_INDEX = 1.33
AGL_INDEX = 1.05
NUCLEON_MASS = 0.939
NAF_SIZE = 8.7 * 2
AGL_SIZE = 11.6 * 5.5
NAF_TILE_SIZE = 8.7
AGL_TILE_SIZE = 11.6
RICH_RADIATOR_X = 0.11
RICH_RADIATOR_Y = -0.08
RICH_RADIATOR_Z = -72.8
RICH_RADIATOR_BETA = {"NaF": 1 / NAF_INDEX, "AGL": 1 / AGL_INDEX}
RICH_RESOLUTION_NAF = 0.0024
RICH_RESOLUTION_AGL = 0.000823
RICH_RADIATOR_RESOLUTION = {"NaF": RICH_RESOLUTION_NAF, "AGL": RICH_RESOLUTION_AGL}
RICH_PMT_Z = -122.82
RICH_RADIATOR_RADIUS = 63.8
RICH_PMT_RADIUS = 70

RICH_INDEX = {"NaF": NAF_INDEX, "AGL": AGL_INDEX}
RICH_SIZE = {"NaF": NAF_SIZE, "AGL": AGL_SIZE}

ECAL_SIZE_XY = 34.0
ECAL_Z_UPPER = -142.792
ECAL_Z_LOWER = -158.457

TOF_SIZE_X = np.array([65.25, 59.75, 64.25, 67.00])
TOF_SIZE_Y = np.array([56.75, 66.10, 66.10, 60.25])
TOF_Z = np.array([(64.425 + 65.975) / 2, (61.325 + 62.875) / 2, (-62.875 + -61.325) / 2, (-64.425 + -65.975) / 2])

TRD_Z_UPPER = 136.75
TRD_Z_LOWER = 90.35
TRD_MAX_X_UPPER = 99.04
TRD_MAX_Y_UPPER = 91.68
TRD_MAX_X_LOWER = 76.22
TRD_MAX_Y_LOWER = 71.48

ACCEPTANCE_INNER = 0x1
ACCEPTANCE_L1 = 0x2
ACCEPTANCE_L9 = 0x4
ACCEPTANCE_TRD = 0x10
ACCEPTANCE_RICH = 0x20
ACCEPTANCE_ECAL = 0x40

ACCEPTANCE_CATEGORIES = {
    "inner": ACCEPTANCE_INNER,
    "l1": ACCEPTANCE_L1,
    "l9": ACCEPTANCE_L9,
    "trd": ACCEPTANCE_TRD,
    "rich": ACCEPTANCE_RICH,
    "ecal": ACCEPTANCE_ECAL,
}

ACCEPTANCE_FULLSPAN = 600
ACCEPTANCE_INNER_L1 = 1795 - ACCEPTANCE_FULLSPAN
ACCEPTANCE_INNER_L9 = 1175 - ACCEPTANCE_FULLSPAN
ACCEPTANCE_INNER_ONLY = 4405 - ACCEPTANCE_FULLSPAN - ACCEPTANCE_INNER_L1 - ACCEPTANCE_INNER_L9

MDR_FULLSPAN = 2180
MDR_INNER_L1 = 610
MDR_INNER_L9 = 840
MDR_INNER_ONLY = 220

CC_LEVEL_FULLSPAN = 1.5e-6
CC_LEVEL_INNER_L1 = 1.7e-6
CC_LEVEL_INNER_L9 = 5.0e-6
CC_LEVEL_INNER_ONLY = 2.0e-5

GEOMETRIC_ACCEPTANCES = {
    "L1+Inner+L9": ACCEPTANCE_FULLSPAN,
    "L1+Inner": ACCEPTANCE_INNER_L1,
    "Inner+L9": ACCEPTANCE_INNER_L9,
    "Inner Only": ACCEPTANCE_INNER_ONLY,
}


MC_PARTICLE_IDS = {
    "Gamma": 1, "Positron": 2, "Electron": 3,
    "Proton": 14, "Antiproton": 15,
    "Deuteron": 45, "Tritium": 46,
    "Alpha": 47, "He4": 47, "He3": 49,
    "Li6": 61, "Li7": 62, 
    "Be7": 63, "Be9": 64, "Be10": 65, 
    "B10": 66, "B11": 67, "C12": 68,
    "N14": 69, "N15": 70, "O16": 71, "F19": 72,
    "AntiDeuteron": 145, "AntiAlpha": 147,
    "AntiHe4": 147, "AntiHe3": 149,
}

MC_PARTICLE_LABELS = {
    14: "p", 15: "Anti-p", 45: "²D", 46: "³T",
    47: "⁴He", 49: "³He",
    61: "⁶Li", 62: "⁷Li",
    63: "⁷Be", 64: "⁹Be", 
    66: "¹⁰B", 67: "¹¹B", 68: "¹²C",
    69: "¹⁴N", 71: "¹⁶O", 73: "¹⁹O",
    145: "²Anti-D", 147: "⁴Anti-He", 149: "³Anti-He",
}

MC_PARTICLE_CHARGES = {
    1: 0,
    2: 1,
    3: 1,
    14: 1,
    15: 1,
    45: 1,
    46: 1,
    47: 2,
    49: 2,
    61: 3,
    62: 3,
    63: 4,
    64: 4,
    65: 4,
    66: 5,
    67: 5,
    68: 6,
    69: 7,
    70: 7,
    71: 8,
    72: 9,
    145: -1,
    147: -2,
    149: -2,
}

MC_PARTICLE_CHARGE_ARRAY = np.zeros(max(MC_PARTICLE_CHARGES.keys()) + 1)

for id, charge in MC_PARTICLE_CHARGES.items():
    MC_PARTICLE_CHARGE_ARRAY[id] = charge



    
MC_PARTICLE_MASSES = {
    1: 0, 2: 0, 3: 0,
    14: 0.93827231, 15: 0.93827231,
    45: 1.875613, 46: 2.80925,
    47: 3.727417, 49: 2.80923,
    61: 5.60305, 62: 6.53536, 
    63: 6.53622, 64: 8.39479, 65: 9.32699,
    66:9.32699, 67: 10.25510,
    68: 11.17793,
    69: 13.115, 70:  13.954,
    71: 14.931, 72: 17.69690,
    145: 1.875613, 147: 3.727417, 149: 2.80923,
}

MC_PARTICLE_NUCLEON_NUMBERS = {
    1: 0, 2: 0, 3: 0,
    14: 1, 15: 1,
    45: 2, 46: 3,
    47: 4, 49: 3,
    61: 6, 62: 7,
    63: 7, 64: 9, 65: 10,
    66: 11, 67: 12,
    68: 14, 69: 16, 70: 19,
    145: 2, 147: 4, 149: 3,
}



MC_PARTICLE_MASS_ARRAY = np.zeros(max(MC_PARTICLE_MASSES.keys()) + 1)

for id, mass in MC_PARTICLE_MASSES.items():
    MC_PARTICLE_MASS_ARRAY[id] = mass


TRK_LAYER_RADIUS = np.array([ 62,  62,  46,  46,  46,  46,  46,  46, 100])
TRK_LAYER_SIZE_Y = np.array([ 47,  40,  44,  44,  36,  36,  44,  44,  29])
TRK_LAYER_SIZE_X = np.array([100, 100, 100, 100, 100, 100, 100, 100,  43])
TRK_LAYER_POSITION_Z = np.array([158.92, 53.06, 29.228, 25.212, 1.698, -2.318, -25.212, -29.228, -135.882])

TRK_N_SENSORS_L1 = (23, 26, 28, 29, 30, 30, 30, 30, 30, 29, 28, 26, 23)
TRK_N_SENSORS_L2 = (26, 28, 29, 30, 30, 30, 30, 30, 29, 28, 26)
TRK_N_SENSORS_L3478 = (14, 18, 21, 23, 24, 24, 24, 24, 23, 21, 18, 14)
TRK_N_SENSORS_L56 = (18, 21, 23, 24, 24, 24, 24, 23, 21, 18)
TRK_N_SENSORS_L9 = (21, 22, 22, 22, 22, 22, 22, 21)
TRK_N_SENSORS = (TRK_N_SENSORS_L1, TRK_N_SENSORS_L2, TRK_N_SENSORS_L3478, TRK_N_SENSORS_L3478, TRK_N_SENSORS_L56, TRK_N_SENSORS_L56, TRK_N_SENSORS_L3478, TRK_N_SENSORS_L3478, TRK_N_SENSORS_L9)
TRK_SENSOR_SIZE_X = 4.1360
TRK_SENSOR_SIZE_Y = 7.2045


ANTIHE_LIMITS = {
    "AMS-01": (1, 140, 1.1e-6),
    "BESS-2": (1, 14, 6.9e-8),
}


MEASURING_TIME_CORRECTION = (
    np.array([  1.         ,  1.0234114 ,   1.0473709 ,   1.07189132,   1.0969858,
       1.12266777 ,  1.148951  ,   1.17584955,   1.20337784,   1.2315506,
       1.26038293 ,  1.28989026,   1.3200884 ,   1.35099352,   1.38262217,
       1.4149913  ,  1.44811823,   1.48202071,   1.51671689,   1.55222536,
       1.58856513 ,  1.62575567,   1.66381689,   1.70276917,   1.74263339,
       1.78343088 ,  1.82518349,   1.8679136 ,   1.91164408,   1.95639834,
       2.00220037 ,  2.04907469,   2.0970464 ,   2.1461412 ,   2.19638537,
       2.24780583 ,  2.30043012,   2.35428641,   2.40940356,   2.46581108,
       2.52353917 ,  2.58261876,   2.64308149,   2.70495973,   2.76828663,
       2.8330961  ,  2.89942285,   2.96730241,   3.03677112,   3.10786619,
       3.18062569 ,  3.2550886 ,   3.33129479,   3.40928507,   3.48910121,
       3.57078596 ,  3.65438307,   3.7399373 ,   3.82749448,   3.91710149,
       4.00880633 ,  4.10265811,   4.19870708,   4.2970047 ,   4.39760361,
       4.50055768 ,  4.60592204,   4.71375313,   4.8241087 ,   4.93704785,
       5.05263107 ,  5.17092024,   5.29197874,   5.41587138,   5.54266452,
       5.67242607 ,  5.80522552,   5.94113398,   6.08022426,   6.22257084,
       6.36824994 ,  6.5173396 ,   6.66991966,   6.82607183,   6.98587975,
       7.14942899 ,  7.31680714,   7.48810386,   7.66341087,   7.84282206,
       8.02643352 ,  8.21434358,   8.40665289,   8.60346442,   8.80488358,
       9.01101825 ,  9.22197882,   9.43787828,   9.65883224,   9.88495905,
      10.1163798  , 10.35321843,  10.59560179,  10.84365969,  11.09752496,
      11.35733358 , 11.62322469,  11.89534067,  12.17382728,  12.45883364,
      12.75051241 , 13.04901978,  13.35451563,  13.66716356,  13.98713103,
      14.31458938 , 14.64971398,  14.99268433,  15.34368409,  15.70290125,
      16.07052818 , 16.44676178,  16.83180353,  17.22585965,  17.62914118,
      18.04186409 , 18.46424943,  18.8965234 ,  19.3389175 ,  19.79166868,
      20.25501939 , 20.7292178 ,  21.21451785,  21.71117946,  22.21946861,
      22.73965752 , 23.27202479,  23.81685552,  24.3744415 ,  24.94508135,
      25.52908068 , 26.12675226,  26.73841616,  27.36439997,  28.00503894,
      28.66067617 , 29.33166278,  30.01835814,  30.72112999,  31.44035472,
      32.1764175  , 32.92971255,  33.70064329,  34.4896226 ,  35.29707303,
      36.123427   , 36.96912707,  37.83462617,  38.72038782,  39.62688639,
      40.55460736 , 41.50404758,  42.47571553,  43.47013158,  44.48782831,
      45.52935075 , 46.59525669,  47.68611698,  48.80251584,  49.94505116,
      51.11433483 , 52.31099308,  53.53566677,  54.7890118 ,  56.07169938,
      57.38441648 , 58.72786613,  60.10276782,  61.50985789,  62.9498899 ,
      64.42363509 , 65.93188271,  67.47544053,  69.0551352 ,  70.67181274,
      72.32633896 , 74.01959997,  75.75250259,  77.52597489,  79.34096666,
      81.19844993 , 83.09941949,  85.04489342,  87.03591361,  89.07354639,
      91.158883   , 93.29304026,  95.47716114,  97.71241535, 100.        ]),
    np.array([1.13226561, 1.1265843 , 1.12143879, 1.11663594, 1.11198751, 1.10747195,
     1.10319919, 1.0991436 , 1.09521043, 1.09142298, 1.08790039, 1.08468838,
     1.08177155, 1.07913495, 1.07669245, 1.07435758, 1.07219662, 1.07024017,
     1.06851826, 1.06706836, 1.06599592, 1.06536827, 1.06510961, 1.06508627,
     1.06517303, 1.06528396, 1.06532045, 1.06515213, 1.06457286, 1.06379083,
     1.06308287, 1.06269512, 1.06286801, 1.06383834, 1.06568692, 1.0681284,
     1.07107802, 1.07446271, 1.07820934, 1.08248299, 1.08747495, 1.09352431,
     1.10040383, 1.10751961, 1.11458232, 1.12117712, 1.12669377, 1.1307176,
     1.13378632, 1.13534117, 1.13557308, 1.13496812, 1.13400115, 1.13305487,
     1.13172914, 1.12992597, 1.12766601, 1.12496883, 1.12187757, 1.11861662,
     1.11542683, 1.11232648, 1.10929849, 1.10631609, 1.1032376 , 1.10009246,
     1.09691957, 1.0938407 , 1.09113349, 1.08857903, 1.08599532, 1.08321347,
     1.08007595, 1.07634762, 1.07201226, 1.0673944 , 1.06273703, 1.05826329,
     1.05400843, 1.0500193 , 1.04639677, 1.04286214, 1.03947633, 1.03653541,
     1.03405863, 1.03198403, 1.03025378, 1.02868315, 1.0270701 , 1.02556757,
     1.0242938 , 1.02335887, 1.02298101, 1.02364897, 1.02458092, 1.02519882,
     1.02561416, 1.02633358, 1.02829377, 1.03110619, 1.03443305, 1.03872758,
     1.04267487, 1.0451858 , 1.0463875 , 1.0464558 , 1.04558715, 1.0431113,
     1.03975988, 1.03614904, 1.03267278, 1.02957162, 1.02605459, 1.02192525,
     1.01787281, 1.01437366, 1.01152155, 1.00913728, 1.00710046, 1.00537241,
     1.0039722 , 1.00305882, 1.00243737, 1.00185183, 1.00125508, 1.00070501,
     1.00015333, 0.99973932, 0.99975851, 0.99987021, 0.99995187, 0.99999737,
     1.00001025, 1.00000728, 1.00000204, 1.00000003, 1.        , 1.,
     1.        , 1.        , 1.        , 1.        , 1.        , 1.,
     1.        , 1.        , 1.        , 1.        , 1.        , 1.,
     1.        , 1.        , 1.        , 1.        , 1.        , 1.,
     1.        , 1.        , 1.        , 1.        , 1.        , 1.,
     1.        , 1.        , 1.        , 1.        , 1.        , 1.,
     1.        , 1.        , 1.        , 1.        , 1.        , 1.,
     1.        , 1.        , 1.        , 1.        , 1.        , 1.,
     1.        , 1.        , 1.        , 1.        , 1.        , 1.,
     1.        , 1.        , 1.        , 1.        , 1.        , 1.,
     1.        , 1.        , 1.        , 1.        , 1.        , 1.,
     1.        , 1.        ]))


CUTOFF_FACTOR = {'Be7': 1.0 , 'Be9': 0.8, 'Be10': 0.6, "Li6": 1.0, "Li7": 0.8, "B10": 1.0, "B11": 0.8, 'O16': 1.0, 'C12': 1.0}
